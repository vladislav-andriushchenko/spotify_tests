plugins {
    id 'java-library'
    id "io.freefair.lombok" version "8.6"
    id "io.qameta.allure" version "2.11.2"
}

repositories {
    mavenCentral()
}

def aspectjWeaverVersion = "1.9.22",
    selenideVersion = "7.0.4",
    restAssuredVersion = "5.4.0",
    allureVersion = "2.24.0",
    junitVersion = "5.10.1",
    slf4jVersion = "2.0.9",
    ownerVersion = "1.0.12",
    assertjVersion = "3.25.3",
    jacksonVersion = "2.16.1",
    appiumVersion = "9.1.0"

allure {
    report {
        version = allureVersion
    }
    adapter {
        aspectjWeaver = true
        frameworks {
            junit5 {
                adapterVersion = allureVersion
            }
        }
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-attachments:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "net.datafaker:datafaker:2.0.2",
            "io.appium:java-client:$appiumVersion",
            "commons-io:commons-io:2.14.0"
//            "com.fasterxml.jackson.core:jackson-databind:2.15.2",
//            "com.fasterxml.jackson.core:jackson-core:2.15.2",
//            "com.fasterxml.jackson.core:jackson-annotations:2.15.2",
    )
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('mobileTests', Test) {
    useJUnitPlatform {
        includeTags 'MOBILE'
    }
}

